using System;
using System.Collections.Generic;
using Jypeli;
using Jypeli.Assets;
using Jypeli.Controls;
using Jypeli.Widgets;

namespace Jalkapallo_peli;
[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
public class Jalkapallo_peli : PhysicsGame
{
Vector nopeusYlos = new Vector(0, 200);
Vector nopeusAlas = new Vector(0, -200);

PhysicsObject pallo;
PhysicsObject maila1;
PhysicsObject maila2;

PhysicsObject vasenReuna;
PhysicsObject oikeaReuna;

IntMeter pelaajan1Pisteet;
IntMeter pelaajan2Pisteet;

public override void Begin()
{
    LuoKentta();
    AsetaOhjaimet();
    LisaaLaskurit();
    LuoAikaLaskuri();
    AloitaPeli();
    TarkistaPallot();

    }

void LuoKentta()
{
    Random random = new Random();

    for (int i = 0; i < 20; i++)
    {
        PhysicsObject pallo = new PhysicsObject(40.0, 40.0);
        pallo.Shape = Shape.Circle;
        pallo.X = random.NextDouble() * (Level.Right - Level.Left) + Level.Left;
        pallo.Y = random.NextDouble() * (Level.Top - Level.Bottom) + Level.Bottom;
        pallo.Restitution = 1.9;
        pallo.KineticFriction = 1.0;
        pallo.MomentOfInertia = Double.PositiveInfinity;
        Add(pallo);
        AddCollisionHandler(pallo, KasittelePallonTormays);

    }
    maila1 = LuoMaila(Level.Left + 20.0, 0.0);
    maila2 = LuoMaila(Level.Right - 20.0, 0.0);

    PhysicsObject ylaReuna = Level.CreateTopBorder();
    ylaReuna.Restitution = 1.0;
    ylaReuna.KineticFriction = 0.0;
    ylaReuna.IsVisible = false;

    PhysicsObject alaReuna = Level.CreateBottomBorder();
    alaReuna.Restitution = 1.0;
    alaReuna.IsVisible = false;
    alaReuna.KineticFriction = 0.0;

    Level.BackgroundColor = Color.Black;

    Camera.ZoomToLevel();
}

PhysicsObject LuoMaila(double x, double y)
{
    PhysicsObject maila = PhysicsObject.CreateStaticObject(20.0, 100.0);
    maila.Shape = Shape.Rectangle;
    maila.X = x;
    maila.Y = y;
    maila.Restitution = 1.0;
    maila.KineticFriction = 0.0;
    Add(maila);
    return maila;
}

void LisaaLaskurit()
    {
        NewMethod();
        pelaajan2Pisteet = LuoPisteLaskuri(Screen.Right - 100.0, Screen.Top - 100.0);

        void NewMethod()
        {
            pelaajan1Pisteet = LuoPisteLaskuri(Screen.Left + 100.0, Screen.Top - 100.0);
        }
    }

    IntMeter LuoPisteLaskuri(double x, double y)
{
    IntMeter laskuri = new IntMeter(0);
    laskuri.MaxValue = 10;

    Label naytto = new Label();
    naytto.BindTo(laskuri);
    naytto.X = x;
    naytto.Y = y;
    naytto.TextColor = Color.White;
    naytto.BorderColor = Level.BackgroundColor;
    naytto.Color = Level.BackgroundColor;
    Add(naytto);

    return laskuri;
}

void KasittelePallonTormays(PhysicsObject pallo, PhysicsObject kohde)
{
    if (kohde == oikeaReuna)
    {
        pelaajan1Pisteet.Value += 1;
    }
    else if (kohde == vasenReuna)
    {
        pelaajan2Pisteet.Value += 1;
    }
    }

void LuoAikaLaskuri()
{
     Timer aikaLaskuri = new Timer();
     aikaLaskuri.Start();

      Label aikaNaytto = new Label();
      aikaNaytto.TextColor = Color.White;
      aikaNaytto.DecimalPlaces = 1;
      aikaNaytto.BindTo(aikaLaskuri.SecondCounter);
        Add(aikaNaytto);
}
    void AloitaPeli()
{
    Vector impulssi = new Vector(500.0, 0.0);
}

void AsetaOhjaimet()
{
    Keyboard.Listen(Key.S, ButtonState.Down, AsetaNopeus, "Pelaaja 1: Liikuta mailaa ylös", maila1, nopeusYlos);
    Keyboard.Listen(Key.S, ButtonState.Released, AsetaNopeus, null, maila1, Vector.Zero);
    Keyboard.Listen(Key.X, ButtonState.Down, AsetaNopeus, "Pelaaja 1: Liikuta mailaa alas", maila1, nopeusAlas);
    Keyboard.Listen(Key.X, ButtonState.Released, AsetaNopeus, null, maila1, Vector.Zero);

    Keyboard.Listen(Key.Up, ButtonState.Down, AsetaNopeus, "Pelaaja 2: Liikuta mailaa ylös", maila2, nopeusYlos);
    Keyboard.Listen(Key.Up, ButtonState.Released, AsetaNopeus, null, maila2, Vector.Zero);
    Keyboard.Listen(Key.Down, ButtonState.Down, AsetaNopeus, "Pelaaja 2: Liikuta mailaa alas", maila2, nopeusAlas);
    Keyboard.Listen(Key.Down, ButtonState.Released, AsetaNopeus, null, maila2, Vector.Zero);

    Keyboard.Listen(Key.F1, ButtonState.Pressed, ShowControlHelp, "Näytä ohjeet");
    Keyboard.Listen(Key.Escape, ButtonState.Pressed, ConfirmExit, "Lopeta peli");

    ControllerOne.Listen(Button.DPadUp, ButtonState.Down, AsetaNopeus, "Liikuta mailaa ylös", maila1, nopeusYlos);
    ControllerOne.Listen(Button.DPadUp, ButtonState.Released, AsetaNopeus, null, maila1, Vector.Zero);
    ControllerOne.Listen(Button.DPadDown, ButtonState.Down, AsetaNopeus, "Liikuta mailaa alas", maila1, nopeusAlas);
    ControllerOne.Listen(Button.DPadDown, ButtonState.Released, AsetaNopeus, null, maila1, Vector.Zero);

    ControllerTwo.Listen(Button.DPadUp, ButtonState.Down, AsetaNopeus, "Liikuta mailaa ylös", maila2, nopeusYlos);
    ControllerTwo.Listen(Button.DPadUp, ButtonState.Released, AsetaNopeus, null, maila2, Vector.Zero);
    ControllerTwo.Listen(Button.DPadDown, ButtonState.Down, AsetaNopeus, "Liikuta mailaa alas", maila2, nopeusAlas);
    ControllerTwo.Listen(Button.DPadDown, ButtonState.Released, AsetaNopeus, null, maila2, Vector.Zero);

    ControllerOne.Listen(Button.Back, ButtonState.Pressed, ConfirmExit, "Lopeta peli");
    ControllerTwo.Listen(Button.Back, ButtonState.Pressed, ConfirmExit, "Lopeta peli");
}

void AsetaNopeus(PhysicsObject maila, Vector nopeus)
{
    if ((nopeus.Y < 0) && (maila.Bottom < Level.Bottom))
    {
        maila.Velocity = Vector.Zero;
        return;
    }
    if ((nopeus.Y > 0) && (maila.Top > Level.Top))
    {
        maila.Velocity = Vector.Zero;
        return;
    }

    maila.Velocity = nopeus;
}
    void TarkistaPallot()
    {
        foreach (PhysicsObject pallo in Game.GetObjects<PhysicsObject>(pallo => pallo.Shape == Shape.Circle))
        {
            if (pallo.IsInside(Level.BoundingRect))
            {
                return; // Pallo on vielä näkyvällä pelialueella, jatketaan peliä
            }
        }

        // Kaikki pallot ovat poistuneet näkyvältä pelialueelta, pysäytetään aikalaskuri
        Timer.Stop();
        Label voittoTeksti = new Label(Level.Width, Level.Height, "Voitit pelin!\nAikasi: " + Timer.CurrentTime.ToString("0.0") + " s");
        voittoTeksti.TextColor = Color.White;
        voittoTeksti.Font = Font.DefaultLargeBold();
        voittoTeksti.TextAlignment = HorizontalAlignment.Center;
        Add(voittoTeksti);
        GameOver = true;
    }

    void UpdateGame()
    {
        // Päivitä fysiikkamaailma
        Physics.Update(Time.SinceLastUpdate);

        // Tarkista, ovatko kaikki pallot poistuneet näkyvältä pelialueelta
        TarkistaPallot();
}
}
